// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedQuantity = 12,
                            DateFrom = new DateTime(2021, 11, 28, 16, 42, 13, 581, DateTimeKind.Local).AddTicks(7963),
                            DateTo = new DateTime(2021, 12, 3, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(5678),
                            ResourceId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookedQuantity = 5,
                            DateFrom = new DateTime(2021, 11, 28, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6122),
                            DateTo = new DateTime(2021, 12, 3, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6144),
                            ResourceId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookedQuantity = 4,
                            DateFrom = new DateTime(2021, 11, 28, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6156),
                            DateTo = new DateTime(2021, 12, 3, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6159),
                            ResourceId = 4
                        },
                        new
                        {
                            Id = 4,
                            BookedQuantity = 2,
                            DateFrom = new DateTime(2021, 11, 28, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6163),
                            DateTo = new DateTime(2021, 12, 3, 16, 42, 13, 585, DateTimeKind.Local).AddTicks(6166),
                            ResourceId = 5
                        });
                });

            modelBuilder.Entity("Domain.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Resource_1",
                            Quantity = 500
                        },
                        new
                        {
                            Id = 2,
                            Name = "Resource_2",
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Resource_3",
                            Quantity = 500
                        },
                        new
                        {
                            Id = 4,
                            Name = "Resource_4",
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            Name = "Resource_5",
                            Quantity = 500
                        });
                });

            modelBuilder.Entity("Domain.Models.Booking", b =>
                {
                    b.HasOne("Domain.Models.Resource", "Resource")
                        .WithMany("Bookings")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
